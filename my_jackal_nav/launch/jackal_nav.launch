<?xml version="1.0"?>

<!-- This file creates the sensor fusion node, and the navigation node. -->

<launch>
	<!-- Namespace must be unique. -->
	<arg name="ns"    default="jackal0"/>
	<arg name="x"     default="0"/>
	<arg name="y"     default="0"/>
	<arg name="z"     default="0"/>
	<arg name="roll"  default="0"/>
	<arg name="pitch" default="0"/>
	<arg name="yaw"   default="0"/>
	<arg name="use_move_base"  default="false"/>
	<arg name="use_global_ekf" default="false"/>
	<arg name="use_global_tf"  default="true"/>

  <!-- Robot localisation, takes IMU and wheel odometry to form a single localisation
		 estimate. -->
	<node pkg="my_robot_localization" type="ekf_localization_node" name="local_ekf_localization" ns="$(arg ns)">
		<!-- Set frame links -->
		<param name="map_frame"       value="map"/>
		<param name="odom_frame"      value="$(arg ns)/odom"/>
		<param name="base_link_frame" value="$(arg ns)/base_link"/>
		<param name="world_frame"     value="$(arg ns)/odom"/>
		<!-- Set modes -->
		<param name="frequency"       value="20"/>
		<!-- Set input types -->
		<param name="odom0"           value="jackal_velocity_controller/odom_fixed"/>
		<param name="imu0"            value="imu/data"/>
		<!-- Remap output. -->
		<remap from="odometry/filtered" to="odometry/local_filtered"/>
		<!-- Configure inputs -->
		<rosparam param="odom0_config">[false, false, false,
                                    false, false, false,
                                     true,  true,  true,
                                    false, false,  true,
                                    false, false, false]</rosparam>
		<rosparam param="imu0_config"> [false, false, false,
                                     true,  true,  true,
                                    false, false, false,
                                     true,  true,  true,
                                    false, false, false]</rosparam>                                
		<param name="odom0_differential" value="false"/>
		<param name="imu0_differential"  value="false"/>
	</node>
  
	<!-- If the Jackals do not have a global position estimate (i.e. something to
       publish the map->odom link, usually a 'robot_localization' node with GPS),
       Then the transform from map->odom must be produced statically. The start 
       position must match the start position used in Gazebo. Gazebo treats its
       start position as 0,0,0 but treats start rotation after that - this means
       that we need to publish a static translation transform, but Gazebo will 
       handle rotation transform.
       Form is x y z yaw pitch roll frame_id child_frame_id period_in_ms. -->
  <group if="$(arg use_global_tf)">
	  <node pkg="tf" type="static_transform_publisher" name="static_map_odom_tf" ns="$(arg ns)"
			  args="$(arg x) $(arg y) $(arg z) 0 0 0 map $(arg ns)/odom 100"/>
  </group>
  <!-- Provide a global position estimate by fusing GPS signal with local odometry. -->
  <group if="$(arg use_global_ekf)">
    <node ns="$(arg ns)" pkg="my_robot_localization" type="navsat_transform_node" name="navsat_transform_node" output="screen">
      <param name="delay"             value="3.0"/>
      <param name="yaw_offset"        value="1.5707963"/>
      <remap from="imu/data"          to="imu/data"/>
      <remap from="odometry/filtered" to="odometry/global_filtered"/>
      <remap from="gps/fix"           to="navsat/fix"/>
    </node>
    <node pkg="my_robot_localization" type="ekf_localization_node" name="global_ekf_localization" ns="$(arg ns)">
		  <rosparam param="initial_state" subst_value="true">
         [   $(arg x),     $(arg y),   $(arg z),
          $(arg roll), $(arg pitch), $(arg yaw),
                  0.0,          0.0,        0.0,
                  0.0,          0.0,        0.0,
                  0.0,          0.0,        0.0]
      </rosparam>
		  
		  <!-- Set frame links -->
		  <param name="map_frame"       value="map"/>
		  <param name="odom_frame"      value="$(arg ns)/odom"/>
		  <param name="base_link_frame" value="$(arg ns)/base_link"/>
		  <param name="world_frame"     value="map"/>
		  <!-- Set modes -->
		  <param name="frequency" value="20"/>
		  <!-- Set input types -->
		  <param name="odom0" value="jackal_velocity_controller/odom_fixed"/>
		  <param name="odom1" value="odometry/gps"/>
		  <param name="imu0"  value="imu/data"/>
		  <!-- Remap output. -->
		  <remap from="odometry/filtered" to="odometry/global_filtered"/>
		  <!-- Configure inputs -->
		  <rosparam param="odom0_config">[false, false, false,
                                      false, false, false,
                                       true,  true,  true,
                                      false, false,  true,
                                      false, false, false]</rosparam>
      <rosparam param="odom1_config">[ true,  true, false,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false,
                                      false, false, false]</rosparam>                                
		  <rosparam param="imu0_config"> [false, false, false,
                                       true,  true,  true,
                                      false, false, false,
                                       true,  true,  true,
                                      false, false, false]</rosparam>                                 
		  <param name="odom0_differential" value="false"/>
		  <param name="odom1_differential" value="false"/>
		  <param name="imu0_differential"  value="false"/>
	  </node>
    
  </group>
  
  
	<!-- Move base. Takes desired location commands and sends velocity commands to get it there. -->
	<group if="$(arg use_move_base)">
		<node pkg="move_base" type="move_base" respawn="false" name="move_base" ns="$(arg ns)" output="screen">
			<!-- Load parameters. -->
			<rosparam file="$(find my_jackal_nav)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
			<rosparam file="$(find my_jackal_nav)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
			<rosparam file="$(find my_jackal_nav)/params/odom_nav_params/global_costmap_params.yaml" command="load" />
			<rosparam file="$(find my_jackal_nav)/params/odom_nav_params/local_costmap_params.yaml" command="load" />
			<rosparam file="$(find my_jackal_nav)/params/base_local_planner_params.yaml" command="load" />
			<rosparam file="$(find my_jackal_nav)/params/move_base_params.yaml" command="load" />
			<param name="base_global_planner" type="string" value="navfn/NavfnROS" />
			<param name="base_local_planner"                value="base_local_planner/TrajectoryPlannerROS"/>
			<param name="global_costmap/global_frame"       value="$(arg ns)/odom"/>
			<param name="global_costmap/robot_base_frame"   value="$(arg ns)/base_link"/>
			<param name="local_costmap/global_frame"        value="$(arg ns)/odom"/>
			<param name="local_costmap/robot_base_frame"    value="$(arg ns)/base_link"/>
			<!-- Remap output topics. -->
			<remap from="odom" to="odometry/filtered" />
			<remap from="cmd_vel" to="jackal_velocity_controller/cmd_vel"/>
		</node>
	</group>

</launch>
